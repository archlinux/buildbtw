workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'parent_pipeline'

before_script:
  - pacman -Syu --needed --noconfirm rust gcc cargo-deny pkgconf sqlx-cli podman crun reuse just
  - cd buildbtw-poc
  - just create-db

variables:
  DATABASE_URL: "sqlite:${CI_PROJECT_DIR}/buildbtw_server.sqlite"

stages:
  - check
  - build
  - deploy

format:
  stage: check
  script:
    - just lint

deny:
  stage: check
  script:
    - just deny

.cache-rust:
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}
    paths:
      - .cargo/bin
      - .cargo/registry/index
      - .cargo/registry/cache
      - target/debug/deps
      - target/debug/build
      - target/release/deps
      - target/release/build
  variables:
    CARGO_HOME: ${CI_PROJECT_DIR}/.cargo

test:
  stage: check
  extends: .cache-rust
  script:
    - just test

build-release:
  stage: check
  extends: .cache-rust
  artifacts:
    paths:
      target/release
  script:
    - cargo build --release --bin buildbtw-server

build-release-image:
  stage: build
  tags:
    - vm # Build in vm so podman build works without issues
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs: ["build-release"]
  script:
    - podman build --format docker --manifest buildbtw-server --file Containerfile --manifest registry.archlinux.org/archlinux/buildbtw:poc-server-latest ../target/release
    - echo "$CI_JOB_TOKEN" | podman login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - podman push registry.archlinux.org/archlinux/buildbtw:poc-server-latest

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs: ["build-release-image"]
  script:
    - pacman -Syu --needed --noconfirm openssh
    - base64 --decode "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - base64 --decode ${BUILDBTW_SSH_PRIVATE_KEY} > ~/.ssh/id_ed25519
    - chmod 640 ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 700 ~/.ssh
    - scp infrastructure/buildbtw-executor.sh buildbtw@${BUILDBTW_SERVER_IPV4}:/srv/buildbtw/gitlab-executor/buildbtw-executor.sh
    - scp infrastructure/build-inside-vm.sh buildbtw@${BUILDBTW_SERVER_IPV4}:/srv/buildbtw/gitlab-executor/build-inside-vm.sh
    - scp infrastructure/deploy-server.sh buildbtw@${BUILDBTW_SERVER_IPV4}:/srv/buildbtw/deploy-server.sh
    - ssh buildbtw@${BUILDBTW_SERVER_IPV4} /srv/buildbtw/deploy-server.sh
